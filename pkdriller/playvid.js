const { zokou } = require("../framework/zokou");
const axios = require('axios');
const ytSearch = require('yt-search');
const conf = require(__dirname + '/../set');

// Define the command with aliases for video download
zokou({
Â  nomCom: "playvideo2",
Â  aliases: ["video", "mp4play", "ytvideo"],
Â  categorie: "Search",
Â  reaction: "ðŸ“¹"
}, async (dest, zk, commandOptions) => {
Â  const { arg, ms, repondre } = commandOptions;

Â  if (!arg[0]) {
Â  Â  return repondre("Please provide a video name to search.");
Â  }

Â  const query = arg.join(" ");

Â  try {
Â  Â  const searchResults = await ytSearch(query);

Â  Â  if (!searchResults || !searchResults.videos.length) {
Â  Â  Â  return repondre('No video found for your query.');
Â  Â  }

Â  Â  const firstVideo = searchResults.videos[0];
Â  Â  const videoUrl = firstVideo.url;
Â  Â  const videoTitle = firstVideo.title;
Â  Â  const videoDuration = firstVideo.timestamp;
Â  Â  const videoThumb = firstVideo.thumbnail;

Â  Â  // New API for MP4 video download
Â  Â  const encodedUrl = encodeURIComponent(videoUrl);
Â  Â  const apiUrl = `https://api.akuari.my.id/downloader/youtube?link=${encodedUrl}`;

Â  Â  let downloadData;

Â  Â  try {
Â  Â  Â  const res = await axios.get(apiUrl);
Â  Â  Â  downloadData = res.data;
Â  Â  } catch (err) {
Â  Â  Â  console.error("API error:", err.message);
Â  Â  Â  return repondre("Failed to fetch video download link.");
Â  Â  }

Â  Â  if (!downloadData || !downloadData.result || !downloadData.result.url) {
Â  Â  Â  return repondre("Could not get a valid video download link.");
Â  Â  }

Â  Â  const downloadUrl = downloadData.result.url;

Â  Â  const messagePayload = {
Â  Â  Â  video: { url: downloadUrl },
Â  Â  Â  caption: `\n*NEXUS VIDEO DOWNLOADER*\n
*Title:* ${videoTitle}
*Duration:* ${videoDuration}
*Powered by Nexus-AI*`,
Â  Â  Â  mimetype: 'video/mp4',
Â  Â  Â  contextInfo: {
Â  Â  Â  Â  isForwarded: true,
Â  Â  Â  Â  forwardedNewsletterMessageInfo: {
Â  Â  Â  Â  Â  newsletterJid: '120363288304618280@newsletter',
Â  Â  Â  Â  Â  newsletterName: "NEXUS TECH",
Â  Â  Â  Â  Â  serverMessageId: 150,
Â  Â  Â  Â  },
Â  Â  Â  Â  forwardingScore: 999,
Â  Â  Â  Â  externalAdReply: {
Â  Â  Â  Â  Â  title: "PkDriller",
Â  Â  Â  Â  Â  body: "YouTube Video Search",
Â  Â  Â  Â  Â  thumbnailUrl: videoThumb,
Â  Â  Â  Â  Â  sourceUrl: videoUrl,
Â  Â  Â  Â  Â  mediaType: 1,
Â  Â  Â  Â  Â  renderLargerThumbnail: true
Â  Â  Â  Â  }
Â  Â  Â  }
Â  Â  };

Â  Â  await zk.sendMessage(dest, messagePayload, { quoted: ms });

Â  } catch (error) {
Â  Â  console.error('Unexpected error:', error.message);
Â  Â  return repondre(`Error: ${error.message || error}`);
Â  }
});
